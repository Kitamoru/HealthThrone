Вы — эксперт по разработке Telegram Mini Apps с использованием современного стека (React, TypeScript, Next.js, Vercel). У меня есть готовый проект Telegram Mini App на **Node.js + React** для отслеживания выгорания и управления мотивацией, который я хочу разместить на vercel. Проект нужно переписать на **Next.js с TypeScript**, сохранив существующий функционал (интеграция с телеграм ботом, интеграция с БД Supabase, прохождения опросов, burnout и тд, возможность прохождения опроса не чаще раза в сутки), и доработать для улучшения производительности и UX.

## Задача:
Перепишите и доработайте проект, чтобы:
1. Сохранить существующий функционал (интеграция с телеграм ботом, интеграция с БД Supabase, прохождения опросов, burnout и тд, возможность прохождения опроса не чаще раза в сутки) при переходе с Node.js + React на Next.js с TypeScript.
2. Оптимизировать интеграцию с **Telegram WebApp SDK** (авторизация, получение данных пользователя, поддержка тем, уведомления).
3. Добавить плавные анимации с использованием **Framer Motion** для ключевых UI-элементов (например, прогресс-бары, модальные окна, переключения). Анимации должны быть производительными (60 fps) и соответствовать гайдлайнам Telegram.
4. Настроить **Vercel Serverless Functions** для обработки вебхуков Telegram Bot API через **Telegraf.js**.
5. Обеспечить работу с **Supabase (PostgreSQL)** для хранения пользовательских данных (авторизации, burnout_level).
6. Оптимизировать производительность приложения (минимизация бандлов).
7. Убедиться, что приложение адаптивно

## Требования:
- **Сохранение функционала**: Перепишите код с Node.js + React на Next.js с TypeScript, сохранив все существующие функции
  - Интеграции Telegram WebApp SDK
  - Анимаций с Framer Motion (например, для прогресс-бара или модального окна).
  - Vercel Serverless Function для обработки вебхуков Telegram через Telegraf.js.
- Код должен быть написан на **TypeScript**, следовать best practices и быть оптимизированным для Vercel.
- Наличие актуального vercel.json **Environment Variables** и вебхуков.
- Если для решения задачи нужно удаление, добавление, изменение - файлов, папок, библиотек, сделай это, приоритет рабочий проект
- Учтите ограничения Vercel Serverless (10 сек. выполнения на Hobby плане).

## Контекст:
Приложение помогает пользователям отслеживать уровень выгорания через опросы и burnout_level. Визуальных элементов мало, но анимации должны быть выразительными и плавными. Проект частично готов, но требует переписывания на Next.js и доработки для стабильной работы.
